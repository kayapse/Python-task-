import json
import os

class Assistant:
    def __init__(self, filename="notes.json"):
        self.filename = filename
        self.notes = self.load_notes()

    def load_notes(self):
        if not os.path.exists(self.filename):
            return []
        try:
            with open(self.filename, "r", encoding="utf-8") as f:
                return json.load(f)
        except (json.JSONDecodeError, FileNotFoundError):
            print("‚ö†Ô∏è –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –∑—á–∏—Ç—É–≤–∞–Ω–Ω—ñ —Ñ–∞–π–ª—É. –°—Ç–≤–æ—Ä—é—é –Ω–æ–≤–∏–π —Ñ–∞–π–ª.")
            return []

    def save_notes(self):
        with open(self.filename, "w", encoding="utf-8") as f:
            json.dump(self.notes, f, ensure_ascii=False, indent=2)

    def add_note(self, note: str):
        self.notes.append(note)
        self.save_notes()
        print("‚úÖ –ù–æ—Ç–∞—Ç–∫—É –¥–æ–¥–∞–Ω–æ.")

    def list_notes(self):
        if not self.notes:
            print("üì≠ –ù–æ—Ç–∞—Ç–æ–∫ –Ω–µ–º–∞—î.")
        else:
            print("üìí –°–ø–∏—Å–æ–∫ –Ω–æ—Ç–∞—Ç–æ–∫:")
            for i, note in enumerate(self.notes, 1):
                print(f"{i}. {note}")

    def search_notes(self, keyword: str):
        results = [note for note in self.notes if keyword.lower() in note.lower()]
        if results:
            print("üîç –ó–Ω–∞–π–¥–µ–Ω–æ –Ω–æ—Ç–∞—Ç–∫–∏:")
            for note in results:
                print(f" - {note}")
        else:
            print("‚ùå –ù—ñ—á–æ–≥–æ –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ.")


def main():
    assistant = Assistant()

    print("üëã –í—ñ—Ç–∞—é! –¶–µ –∫–æ–Ω—Å–æ–ª—å–Ω–∏–π –ø–æ–º—ñ—á–Ω–∏–∫.")
    while True:
        command = input("\n–í–≤–µ–¥—ñ—Ç—å –∫–æ–º–∞–Ω–¥—É (/add, /list, /search, /exit): ").strip()

        if command == "/add":
            note = input("–í–≤–µ–¥—ñ—Ç—å —Ç–µ–∫—Å—Ç –Ω–æ—Ç–∞—Ç–∫–∏: ")
            assistant.add_note(note)

        elif command == "/list":
            assistant.list_notes()

        elif command == "/search":
            keyword = input("–í–≤–µ–¥—ñ—Ç—å –∫–ª—é—á–æ–≤–µ —Å–ª–æ–≤–æ –¥–ª—è –ø–æ—à—É–∫—É: ")
            assistant.search_notes(keyword)

        elif command == "/exit":
            print("üëã –î–æ –ø–æ–±–∞—á–µ–Ω–Ω—è!")
            break

        else:
            print("‚ùì –ù–µ–≤—ñ–¥–æ–º–∞ –∫–æ–º–∞–Ω–¥–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.")


if __name__ == "__main__":
    main()
